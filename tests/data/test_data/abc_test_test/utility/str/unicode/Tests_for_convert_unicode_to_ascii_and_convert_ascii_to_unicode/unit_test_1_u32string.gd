#class std::tuple<class std::basic_string<char32_t,struct std::char_traits<char32_t>,class std::allocator<char32_t> >,class std::expected<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > > >
("hello\x0000D800",(1,"The function convert_unicode_to_ascii encountered an error when processing the unicode input \"hello\\x0000D800\". The error encountered is as follows; the 6th char32_t code unit in the unicode string, represented in hex as 0x0000D800, was found to be invalid under the UTF32 standard. UTF32 code units must be inclusively between either 0x00000000 and 0x0000D7FF, or 0x0000E000 and 0x0010FFFF. Therefore, the code unit 0x0000D800 is invalid."))
("\x0001F600",(1,"The function convert_unicode_to_ascii encountered an error when processing the unicode input \"😀\". The error encountered is as follows; the 1st char32_t code point extracted from the unicode input string, representing the character `😀' (hex 0x0001F600), was found to be outside the basic ASCII range - that is, it was not inclusively within the range 0x00000000 and 0x0000007F."))
("\x0010FFFFhello",(1,"The function convert_unicode_to_ascii encountered an error when processing the unicode input \"􏿿hello\". The error encountered is as follows; the 1st char32_t code point extracted from the unicode input string, representing the character `􏿿' (hex 0x0010FFFF), was found to be outside the basic ASCII range - that is, it was not inclusively within the range 0x00000000 and 0x0000007F."))