#class std::tuple<class std::basic_string<char16_t,struct std::char_traits<char16_t>,class std::allocator<char16_t> >,class std::expected<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > > >
("hello\xD801",(1, "The function convert_unicode_to_ascii encountered an error when processing the unicode input \"hello\\uD801\". The error encountered is as follows; the 6th char16_t code unit in the unicode string, represented in hex as 0xD801, was found to be invalid under the UTF16 standard. It was processed as a high surrogate code unit, meant to be the first part of a pair of high and low surrogate code units, which together should represent a single unicode code point. However, as it is the last code unit in the sequence of code units, it was not possible to process it as part of a pair, and it is therefore part of an invalid code unit sequence."))
("hello\xD801\xD801",(1, "The function convert_unicode_to_ascii encountered an error when processing the unicode input \"hello\\uD801\\uD801\". The error encountered is as follows; the 6th and 7th char16_t code units in the unicode string, represented in hex as [0xD801,0xD801], were found to be part of an invalid code unit sequence under the UTF16 standard. The 1st code unit was processed as a high surrogate code unit, meant to be the first part of a pair of high and low surrogate code units, which together should represent a single unicode code point. However, the 2nd code unit was identified as a high surrogate code unit - that is, inclusively between 0xD800 and 0xDBFF. It should have been a low surrogate code unit - inclusively between 0xDC00 and 0xDFFF. As such, the code unit sequence is invalid."))
("hello\xDC01",(1, "The function convert_unicode_to_ascii encountered an error when processing the unicode input \"hello\\uDC01\". The error encountered is as follows; the 6th char16_t code unit in the unicode string, represented in hex as 0xDC01, was found to be invalid under the UTF16 standard. It is a low surrogate code unit - inclusively between the values 0xDC00 and 0xDFFF. The UTF16 standard dicates that low surrogate code units should always follow a high surrogate code unit. As such, 0xDC01 is part of an invalid code unit sequence."))