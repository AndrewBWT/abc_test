#struct std::pair<unsigned __int64,class std::tuple<unsigned __int64,unsigned __int64,unsigned __int64,class std::vector<class std::tuple<bool,bool,bool,bool,unsigned __int64,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> >,class std::vector<class std::tuple<class std::optional<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > >,enum abc::matcher::enum_bba_inner_assertion_type_t,bool,bool,class abc::matcher::matcher_result_infos_t>,class std::allocator<class std::tuple<class std::optional<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > >,enum abc::matcher::enum_bba_inner_assertion_type_t,bool,bool,class abc::matcher::matcher_result_infos_t> > > >,class std::allocator<class std::tuple<bool,bool,bool,bool,unsigned __int64,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> >,class std::vector<class std::tuple<class std::optional<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > >,enum abc::matcher::enum_bba_inner_assertion_type_t,bool,bool,class abc::matcher::matcher_result_infos_t>,class std::allocator<class std::tuple<class std::optional<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > >,enum abc::matcher::enum_bba_inner_assertion_type_t,bool,bool,class abc::matcher::matcher_result_infos_t> > > > > > > >
(0,(0,1,1,[((0,false),false,false,1,"multi matcher",[])]))
(1,(0,1,1,[((1,false),false,true,1,"multi matcher",[])]))
(2,(0,1,1,[((0,false),false,false,1,"multi matcher",[((true,([],"true",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"false",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(3,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"true",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"false",[])),{},MATCHER_BASED_ASSERTION,true)])]))
(4,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"true",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"false",[])),{},MATCHER_BASED_ASSERTION,false),((true,([],"true",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(5,(0,1,1,[((0,false),false,false,1,"multi matcher",[((true,([],"2 == 2",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"2 != 3",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(6,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"2 == 2",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"2 != 3",[])),{},MATCHER_BASED_ASSERTION,true)])]))
(7,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"2 == 2",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"2 != 3",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(8,(0,1,1,[((0,false),false,false,1,"multi matcher",[((true,([],"(true) && (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Right-hand","R",([],"false",[]))],"(true) && (false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[]))],"(false) && (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[])),("Right-hand","R",([],"false",[]))],"(false) && (false)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(9,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"(true) && (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Right-hand","R",([],"false",[]))],"(true) && (false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[]))],"(false) && (true)",[])),{},MATCHER_BASED_ASSERTION,true)])]))
(10,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"(true) && (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Right-hand","R",([],"false",[]))],"(true) && (false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[]))],"(false) && (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[])),("Right-hand","R",([],"false",[]))],"(false) && (false)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(11,(0,1,1,[((0,false),false,false,1,"multi matcher",[((true,([],"(true) || (true)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Right-hand","R",([],"false",[]))],"(true) || (false)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Left-hand","L",([],"false",[]))],"(false) || (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[])),("Right-hand","R",([],"false",[]))],"(false) || (false)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(12,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"(true) || (true)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Right-hand","R",([],"false",[]))],"(true) || (false)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Left-hand","L",([],"false",[]))],"(false) || (true)",[])),{},MATCHER_BASED_ASSERTION,true),((false,([("Left-hand","L",([],"false",[])),("Right-hand","R",([],"false",[]))],"(false) || (false)",[])),{},MATCHER_BASED_ASSERTION,true)])]))
(13,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"(true) || (true)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Right-hand","R",([],"false",[]))],"(true) || (false)",[])),{},MATCHER_BASED_ASSERTION,false),((true,([("Left-hand","L",([],"false",[]))],"(false) || (true)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Left-hand","L",([],"false",[])),("Right-hand","R",([],"false",[]))],"(false) || (false)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(14,(0,1,1,[((0,false),false,false,1,"multi matcher",[((true,([],"!(false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Child","C",([],"true",[]))],"!(true)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
(15,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"!(false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Child","C",([],"true",[]))],"!(true)",[])),{},MATCHER_BASED_ASSERTION,true)])]))
(16,(0,1,1,[((1,false),false,true,1,"multi matcher",[((true,([],"!(false)",[])),{},MATCHER_BASED_ASSERTION,false),((false,([("Child","C",([],"true",[]))],"!(true)",[])),{},MATCHER_BASED_ASSERTION,false)])]))
#(7,(0,1,1,[(false,false,false,1,"multi matcher",[((true,([],"2 == 2",[])),{},MATCHER_BASED_ASSERTION,false),((false,([],"2 != 3",[])),{},MATCHER_BASED_ASSERTION,true)])]))