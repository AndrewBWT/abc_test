#class std::tuple<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> >,class std::variant<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > > >
("Classic Cars", (0, "Classic Cars"))
("Non-classic carsÂ¬", (1, "The function convert_u8string_to_string could not encode the character 'Â¬' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 17th character in the string \"Non-classic carsÂ¬\"."))
("Emoticon test ğŸ˜€ğŸ™ƒ", (1, "The function convert_u8string_to_string could not encode the character 'ğŸ˜€' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 15th character in the string \"Emoticon test ğŸ˜€ğŸ™ƒ\"."))
("ğŸ˜€ğŸ™ƒ", (1, "The function convert_u8string_to_string could not encode the character 'ğŸ˜€' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 1st character in the string \"ğŸ˜€ğŸ™ƒ\"."))
("xğŸ™ƒ", (1, "The function convert_u8string_to_string could not encode the character 'ğŸ™ƒ' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 2nd character in the string \"xğŸ™ƒ\"."))
("xxğŸ™ƒ", (1, "The function convert_u8string_to_string could not encode the character 'ğŸ™ƒ' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 3rd character in the string \"xxğŸ™ƒ\"."))
("xxxğŸ™ƒ", (1, "The function convert_u8string_to_string could not encode the character 'ğŸ™ƒ' into basic ASCII, which is the encoding used for the std::string type in abc_test. This error occoured when converting the 4th character in the string \"xxxğŸ™ƒ\"."))
