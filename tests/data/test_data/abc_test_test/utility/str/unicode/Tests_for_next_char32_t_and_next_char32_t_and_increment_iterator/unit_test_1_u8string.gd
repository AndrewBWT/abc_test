#class std::tuple<class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> >,class std::vector<class std::tuple<int,class std::optional<struct std::pair<char32_t,unsigned __int64> >,class std::expected<struct std::pair<char32_t,unsigned __int64>,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > > >,class std::allocator<class std::tuple<int,class std::optional<struct std::pair<char32_t,unsigned __int64> >,class std::expected<struct std::pair<char32_t,unsigned __int64>,class std::basic_string<char8_t,struct std::char_traits<char8_t>,class std::allocator<char8_t> > > > > > >
("hello\x80",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\x80\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st char8_t code unit in the unicode substring, represented in hex as 0x80, was found to be invalid under the UTF8 standard. An attempt was made to recognise it as a leading code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a leading code unit, it must be inclusively between either 0x00 and 0x7F, 0xC0 and 0xDF, 0xE0 and 0xEF, or 0xF0 and 0xF7. As 0x80 did not meet these criteria, it was recognised as an invalid code unit.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\x80\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st char8_t code unit in the unicode substring, represented in hex as 0x80, was found to be invalid under the UTF8 standard. An attempt was made to recognise it as a leading code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a leading code unit, it must be inclusively between either 0x00 and 0x7F, 0xC0 and 0xDF, 0xE0 and 0xEF, or 0xF0 and 0xF7. As 0x80 did not meet these criteria, it was recognised as an invalid code unit.")))])
("hello\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st char8_t code unit in the unicode substring, represented in hex as 0xC0, was found to be part of an invalid code unit sequence under the UTF8 standard. It was recognised as a leading code unit, and should have been the 1st of 2 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 1st code unit 0xC0, therefore meaning this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st char8_t code unit in the unicode substring, represented in hex as 0xC0, was found to be part of an invalid code unit sequence under the UTF8 standard. It was recognised as a leading code unit, and should have been the 1st of 2 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 1st code unit 0xC0, therefore meaning this code unit sequence is invalid.")))])
("hello\xE0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st and 2nd char8_t code units in the unicode substring, represented in hex as [0xE0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. 0xE0 was recognised as a leading code unit, and should have been the 1st of 3 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 2nd code unit 0xC0, therefore meaning this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st and 2nd char8_t code units in the unicode substring, represented in hex as [0xE0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. 0xE0 was recognised as a leading code unit, and should have been the 1st of 3 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 2nd code unit 0xC0, therefore meaning this code unit sequence is invalid.")))])
("hello\xF0\xE0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xE0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xF0,0xE0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. 0xF0 was recognised as a leading code unit, and should have been the 1st of 4 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 3rd code unit 0xC0, therefore meaning this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xE0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xF0,0xE0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. 0xF0 was recognised as a leading code unit, and should have been the 1st of 4 code units, which together would have represented a unicode code point. However, the sequence of code units ends after the 3rd code unit 0xC0, therefore meaning this code unit sequence is invalid.")))])
("hello\xC0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st and 2nd char8_t code units in the unicode substring, represented in hex as [0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st and 2nd char8_t code units in the unicode substring, represented in hex as [0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xE0\xC0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xE0,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xE0,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xE0\xBF\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xBF\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xE0,0xBF,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 3rd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xE0\\\\xBF\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd and 3rd char8_t code units in the unicode substring, represented in hex as [0xE0,0xBF,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 3rd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xF0\xC0\xC0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xC0\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xC0,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xC0\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xC0,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 2nd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xF0\xBF\xC0\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xBF\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xBF,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 3rd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xBF\\\\xC0\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xBF,0xC0,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 3rd code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xF0\xBF\xBF\xC0",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xBF\\\\xBF\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xBF,0xBF,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 4th code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\xBF\\\\xBF\\\\xC0\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0xBF,0xBF,0xC0], were found to be part of an invalid code unit sequence under the UTF8 standard. An attempt was made to recognise the 4th code unit in the sequence (0xC0) as a continuation code unit, as part of a unicode code point. However it did not meet the criteria. For a code unit to be recognised as a continuation code unit, it must be inclusively between 0x80 and 0xBF. As 0xC0 did not meet this criteria, this code unit sequence is invalid.")))])
("hello\xF0\x80\x81\xA1",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\x80\\\\x81\\\\xA1\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0x80,0x81,0xA1], were found to be part of an invalid code unit sequence under the UTF8 standard. After converting the sequence to the single UTF32 code unit `a' (0x00000061 in hex), it was found that `a' can be represented using the smaller sequence of char8_t code units [0x61]. Part of the unicode standard dicates that UTF8 sequence are only valid if they encode unicode code points using the smallest possible char8_t representation. Therefore, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF0\\\\x80\\\\x81\\\\xA1\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF0,0x80,0x81,0xA1], were found to be part of an invalid code unit sequence under the UTF8 standard. After converting the sequence to the single UTF32 code unit `a' (0x00000061 in hex), it was found that `a' can be represented using the smaller sequence of char8_t code units [0x61]. Part of the unicode standard dicates that UTF8 sequence are only valid if they encode unicode code points using the smallest possible char8_t representation. Therefore, this code unit sequence is invalid.")))])
("hello\xF4\x90\x80\x80",[(0,(0,('h',1))),(2,(0,('l',1))),(5,(1,("The function next_char32_t was unable to get the next UTF32 code point from the unicide substring \"\\\\xF4\\\\x90\\\\x80\\\\x80\". This substring has been created using the iterator arguments for next_char32_t. next_char32_t was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF4,0x90,0x80,0x80], were found to be part of an invalid code unit sequence under the UTF8 standard. After converting the sequence to a single UTF32 code unit, it was found to be invalid. The UTF32 code unit in question is represented in hex as 0x00110000, and is outside the unicode range. The unicode range is inclusively from 0x00000000 to 0x0000D7FF, and from 0x0000E000 to 0x0010FFFF. As 0x00110000 is not within this range, this code unit sequence is invalid.","The function next_char32_t_and_increment_iterator was unable to get the next UTF32 code point from the unicide substring \"\\\\xF4\\\\x90\\\\x80\\\\x80\". This substring has been created using the iterator arguments for next_char32_t_and_increment_iterator. next_char32_t_and_increment_iterator was unable to get the next UF32 code point due to the following reason; the 1st, 2nd, 3rd and 4th char8_t code units in the unicode substring, represented in hex as [0xF4,0x90,0x80,0x80], were found to be part of an invalid code unit sequence under the UTF8 standard. After converting the sequence to a single UTF32 code unit, it was found to be invalid. The UTF32 code unit in question is represented in hex as 0x00110000, and is outside the unicode range. The unicode range is inclusively from 0x00000000 to 0x0000D7FF, and from 0x0000E000 to 0x0010FFFF. As 0x00110000 is not within this range, this code unit sequence is invalid.")))])